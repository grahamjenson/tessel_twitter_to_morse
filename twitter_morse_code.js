// Generated by CoffeeScript 1.9.1
(function() {
  var MorseCode, Twitter, dash, dot, keys, led1, led2, morseConverter, morse_blink, promise, q, tessel, toggle, twitterStreamClient;

  tessel = require('tessel');

  keys = require('./twitter_keys.json');

  MorseCode = require("morsecode");

  morseConverter = new MorseCode();

  Twitter = require('node-twitter');

  q = require('q');

  led1 = tessel.led[0];

  led2 = tessel.led[1];

  toggle = function(led, time) {
    led.write(true);
    return q.delay(time).then(function() {
      return led.write(false);
    });
  };

  dot = function() {
    console.log('dot');
    return toggle(led1, 100);
  };

  dash = function() {
    console.log('dash');
    return toggle(led2, 200);
  };

  morse_blink = function(message, text) {
    var char, i, len, promise;
    console.log("BLINKING", text);
    promise = q.fcall(function() {});
    for (i = 0, len = message.length; i < len; i++) {
      char = message[i];
      console.log;
      if (char === '.') {
        promise = promise.then(function() {
          return dot();
        });
      } else if (char === '_') {
        promise = promise.then(function() {
          return dash();
        });
      }
    }
    return promise;
  };

  twitterStreamClient = new Twitter.StreamClient(keys.key, keys.secret, keys.akey, keys.asecret);

  promise = q.fcall(function() {});

  twitterStreamClient.on('tweet', function(tweet) {
    var morse, text;
    text = tweet.text;
    morse = morseConverter.translate(tweet.text);
    console.log(text);
    console.log(morse);
    return promise = promise.then(function() {
      return morse_blink(morse, text);
    });
  });

  twitterStreamClient.start(['grahamjenson']);

}).call(this);
